<template>
  <div>
    <style>
      button { display: block; }
    </style>
    <button @click='play'>播放</button>
    <button @click='pause'>暂停</button>
  </div>
</template>

<script>
  import Hearken from '../src'
  import pitchShift from 'pitch-shift'
  import ajax, { get } from '../demo/xhr'

  let buffer
  const hearken = new Hearken()
  const manager = hearken.create()
  const pitch = new Hearken.Pitch(false, {
      frameSize: 2048,
      hopSize: 512,
      channel: 2,
    }
  )

  function Root (props) {
    props.play = play
    props.pause = () => manager.stop()
    return // #temp string
  }

  function getMusic (name) {
    return new Promise(resolve => {
      get('http://localhost:3000/getMusic?name=' + name, resolve)
    })
  }

  function play (e) {
    if (!buffer) {
      getMusic('毒苹果').then(buffer => {
        buffer = buffer
        manager.replaceBuffer(buffer)
        manager.Hearken.ready(() => {
          manager.fadeStart()
        })
      })
    } else {
      manager.Hearken.ready(() => {
        manager.fadeStart()
      })
    }
  }

  // 允许自定义 process
  const process = (input, output) => {
    for (let i = 0; i < pitch.frameSize; i++) {
      output[i] = input[i + 2]
    }
  }
  pitch.process = process
  // pitch.on('change', v => {
  //   pitch.process = v === 1 
  //     ? process
  //     : null
  // })

  manager.on('connect', ([node, connect]) => {
    pitch.connect(node)
    connect(pitch)
  })

  Grass.mount(root, Root)
  window.m = manager
  window.p = pitch
</script>